{"version":3,"sources":["@wordpress/blocks/src/api/raw-handling/special-comment-converter.js"],"names":["specialCommentConverter","node","doc","nodeType","COMMENT_NODE","nodeValue","createNextpage","indexOf","moreCommentConverter","customText","slice","trim","sibling","noTeaser","nextSibling","moreBlock","createMore","parentNode","nodeName","childNodes","length","Array","from","nodeIndex","wrapperNode","body","paragraphBuilder","acc","child","createElement","appendChild","reduce","forEach","element","insertBefore","dataset","block"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { remove, replace } from '@wordpress/dom';\n\n/**\n * Looks for `<!--nextpage-->` and `<!--more-->` comments and\n * replaces them with a custom element representing a future block.\n *\n * The custom element is a way to bypass the rest of the `raw-handling`\n * transforms, which would eliminate other kinds of node with which to carry\n * `<!--more-->`'s data: nodes with `data` attributes, empty paragraphs, etc.\n *\n * The custom element is then expected to be recognized by any registered\n * block's `raw` transform.\n *\n * @param {Node}     node The node to be processed.\n * @param {Document} doc  The document of the node.\n * @return {void}\n */\nexport default function specialCommentConverter( node, doc ) {\n\tif ( node.nodeType !== node.COMMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tif ( node.nodeValue === 'nextpage' ) {\n\t\treplace( node, createNextpage( doc ) );\n\t\treturn;\n\t}\n\n\tif ( node.nodeValue.indexOf( 'more' ) === 0 ) {\n\t\tmoreCommentConverter( node, doc );\n\t}\n}\n\n/**\n * Convert `<!--more-->` as well as the `<!--more Some text-->` variant\n * and its `<!--noteaser-->` companion into the custom element\n * described in `specialCommentConverter()`.\n *\n * @param {Node}     node The node to be processed.\n * @param {Document} doc  The document of the node.\n * @return {void}\n */\nfunction moreCommentConverter( node, doc ) {\n\t// Grab any custom text in the comment.\n\tconst customText = node.nodeValue.slice( 4 ).trim();\n\n\t/*\n\t * When a `<!--more-->` comment is found, we need to look for any\n\t * `<!--noteaser-->` sibling, but it may not be a direct sibling\n\t * (whitespace typically lies in between)\n\t */\n\tlet sibling = node;\n\tlet noTeaser = false;\n\twhile ( ( sibling = sibling.nextSibling ) ) {\n\t\tif (\n\t\t\tsibling.nodeType === sibling.COMMENT_NODE &&\n\t\t\tsibling.nodeValue === 'noteaser'\n\t\t) {\n\t\t\tnoTeaser = true;\n\t\t\tremove( sibling );\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst moreBlock = createMore( customText, noTeaser, doc );\n\n\t// If our `<!--more-->` comment is in the middle of a paragraph, we should\n\t// split the paragraph in two and insert the more block in between. If not,\n\t// the more block will eventually end up being inserted after the paragraph.\n\tif (\n\t\t! node.parentNode ||\n\t\tnode.parentNode.nodeName !== 'P' ||\n\t\tnode.parentNode.childNodes.length === 1\n\t) {\n\t\treplace( node, moreBlock );\n\t} else {\n\t\tconst childNodes = Array.from( node.parentNode.childNodes );\n\t\tconst nodeIndex = childNodes.indexOf( node );\n\t\tconst wrapperNode = node.parentNode.parentNode || doc.body;\n\n\t\tconst paragraphBuilder = ( acc, child ) => {\n\t\t\tif ( ! acc ) {\n\t\t\t\tacc = doc.createElement( 'p' );\n\t\t\t}\n\n\t\t\tacc.appendChild( child );\n\n\t\t\treturn acc;\n\t\t};\n\n\t\t// Split the original parent node and insert our more block\n\t\t[\n\t\t\tchildNodes.slice( 0, nodeIndex ).reduce( paragraphBuilder, null ),\n\t\t\tmoreBlock,\n\t\t\tchildNodes.slice( nodeIndex + 1 ).reduce( paragraphBuilder, null ),\n\t\t].forEach(\n\t\t\t( element ) =>\n\t\t\t\telement && wrapperNode.insertBefore( element, node.parentNode )\n\t\t);\n\n\t\t// Remove the old parent paragraph\n\t\tremove( node.parentNode );\n\t}\n}\n\nfunction createMore( customText, noTeaser, doc ) {\n\tconst node = doc.createElement( 'wp-block' );\n\tnode.dataset.block = 'core/more';\n\tif ( customText ) {\n\t\tnode.dataset.customText = customText;\n\t}\n\tif ( noTeaser ) {\n\t\t// \"Boolean\" data attribute.\n\t\tnode.dataset.noTeaser = '';\n\t}\n\treturn node;\n}\n\nfunction createNextpage( doc ) {\n\tconst node = doc.createElement( 'wp-block' );\n\tnode.dataset.block = 'core/nextpage';\n\n\treturn node;\n}\n"]}