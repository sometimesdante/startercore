{"version":3,"sources":["@wordpress/blocks/src/api/parser/convert-legacy-block.js"],"names":["convertLegacyBlockNameAndAttributes","name","attributes","newAttributes","indexOf","service","substring","providerSlug","deprecated","speaker","polldaddy","providerNameSlug","includes","responsive","className","join","legacy"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,mCAAT,CAA8CC,IAA9C,EAAoDC,UAApD,EAAiE;AACvE,QAAMC,aAAa,GAAG,EAAE,GAAGD;AAAL,GAAtB,CADuE,CAEvE;;AACA,MAAK,uBAAuBD,IAA5B,EAAmC;AAClCA,IAAAA,IAAI,GAAG,YAAP;AACA,GALsE,CAOvE;;;AACA,MAAK,gBAAgBA,IAAhB,IAAwB,sBAAsBA,IAAnD,EAA0D;AACzDA,IAAAA,IAAI,GAAG,gBAAP;AACA,GAVsE,CAYvE;AACA;;;AACA,MAAKA,IAAI,IAAIA,IAAI,CAACG,OAAL,CAAc,mBAAd,MAAwC,CAArD,EAAyD;AACxD;AACAD,IAAAA,aAAa,CAACE,OAAd,GAAwBJ,IAAI,CAACK,SAAL,CAAgB,EAAhB,CAAxB;AACAL,IAAAA,IAAI,GAAG,kBAAP;AACA,GAlBsE,CAoBvE;AACA;;;AACA,MAAKA,IAAI,IAAIA,IAAI,CAACG,OAAL,CAAc,aAAd,MAAkC,CAA/C,EAAmD;AAClD;AACA,UAAMG,YAAY,GAAGN,IAAI,CAACK,SAAL,CAAgB,EAAhB,CAArB;AACA,UAAME,UAAU,GAAG;AAClBC,MAAAA,OAAO,EAAE,cADS;AAElBC,MAAAA,SAAS,EAAE;AAFO,KAAnB;AAIAP,IAAAA,aAAa,CAACQ,gBAAd,GACCJ,YAAY,IAAIC,UAAhB,GACGA,UAAU,CAAED,YAAF,CADb,GAEGA,YAHJ,CAPkD,CAWlD;AACA;;AACA,QAAK,CAAE,CAAE,eAAF,EAAmB,WAAnB,EAAiCK,QAAjC,CAA2CL,YAA3C,CAAP,EAAmE;AAClEJ,MAAAA,aAAa,CAACU,UAAd,GAA2B,IAA3B;AACA;;AACDZ,IAAAA,IAAI,GAAG,YAAP;AACA,GAvCsE,CAyCvE;AACA;;;AACA,MAAKA,IAAI,KAAK,0BAAd,EAA2C;AAC1CA,IAAAA,IAAI,GAAG,0BAAP;AACA;;AACD,MAAKA,IAAI,KAAK,2BAAd,EAA4C;AAC3CA,IAAAA,IAAI,GAAG,sBAAP;AACA;;AACD,MAAKA,IAAI,KAAK,wBAAd,EAAyC;AACxCA,IAAAA,IAAI,GAAG,mBAAP;AACA;;AACD,MAAKA,IAAI,KAAK,0BAAd,EAA2C;AAC1CA,IAAAA,IAAI,GAAG,eAAP;AACA,UAAM;AAAEa,MAAAA,SAAS,GAAG;AAAd,QAAqBX,aAA3B;;AACA,QAAK,CAAEW,SAAS,CAACF,QAAV,CAAoB,8BAApB,CAAP,EAA8D;AAC7DT,MAAAA,aAAa,CAACW,SAAd,GAA0B,CACzB,8BADyB,EAEzBA,SAFyB,EAGxBC,IAHwB,CAGlB,GAHkB,CAA1B;AAIA,KARyC,CAS1C;AACA;;AACA;;AACD,MAAKd,IAAI,KAAK,oBAAd,EAAqC;AACpCA,IAAAA,IAAI,GAAG,eAAP;AACAE,IAAAA,aAAa,CAACa,MAAd,GAAuB,IAAvB;AACA;;AAED,SAAO,CAAEf,IAAF,EAAQE,aAAR,CAAP;AACA","sourcesContent":["/**\n * Convert legacy blocks to their canonical form. This function is used\n * both in the parser level for previous content and to convert such blocks\n * used in Custom Post Types templates.\n *\n * @param {string} name       The block's name\n * @param {Object} attributes The block's attributes\n *\n * @return {[string, Object]} The block's name and attributes, changed accordingly if a match was found\n */\nexport function convertLegacyBlockNameAndAttributes( name, attributes ) {\n\tconst newAttributes = { ...attributes };\n\t// Convert 'core/cover-image' block in existing content to 'core/cover'.\n\tif ( 'core/cover-image' === name ) {\n\t\tname = 'core/cover';\n\t}\n\n\t// Convert 'core/text' blocks in existing content to 'core/paragraph'.\n\tif ( 'core/text' === name || 'core/cover-text' === name ) {\n\t\tname = 'core/paragraph';\n\t}\n\n\t// Convert derivative blocks such as 'core/social-link-wordpress' to the\n\t// canonical form 'core/social-link'.\n\tif ( name && name.indexOf( 'core/social-link-' ) === 0 ) {\n\t\t// Capture `social-link-wordpress` into `{\"service\":\"wordpress\"}`\n\t\tnewAttributes.service = name.substring( 17 );\n\t\tname = 'core/social-link';\n\t}\n\n\t// Convert derivative blocks such as 'core-embed/instagram' to the\n\t// canonical form 'core/embed'.\n\tif ( name && name.indexOf( 'core-embed/' ) === 0 ) {\n\t\t// Capture `core-embed/instagram` into `{\"providerNameSlug\":\"instagram\"}`\n\t\tconst providerSlug = name.substring( 11 );\n\t\tconst deprecated = {\n\t\t\tspeaker: 'speaker-deck',\n\t\t\tpolldaddy: 'crowdsignal',\n\t\t};\n\t\tnewAttributes.providerNameSlug =\n\t\t\tproviderSlug in deprecated\n\t\t\t\t? deprecated[ providerSlug ]\n\t\t\t\t: providerSlug;\n\t\t// This is needed as the `responsive` attribute was passed\n\t\t// in a different way before the refactoring to block variations.\n\t\tif ( ! [ 'amazon-kindle', 'wordpress' ].includes( providerSlug ) ) {\n\t\t\tnewAttributes.responsive = true;\n\t\t}\n\t\tname = 'core/embed';\n\t}\n\n\t// Convert Post Comment blocks in existing content to Comment blocks.\n\t// TODO: Remove these checks when WordPress 6.0 is released.\n\tif ( name === 'core/post-comment-author' ) {\n\t\tname = 'core/comment-author-name';\n\t}\n\tif ( name === 'core/post-comment-content' ) {\n\t\tname = 'core/comment-content';\n\t}\n\tif ( name === 'core/post-comment-date' ) {\n\t\tname = 'core/comment-date';\n\t}\n\tif ( name === 'core/comments-query-loop' ) {\n\t\tname = 'core/comments';\n\t\tconst { className = '' } = newAttributes;\n\t\tif ( ! className.includes( 'wp-block-comments-query-loop' ) ) {\n\t\t\tnewAttributes.className = [\n\t\t\t\t'wp-block-comments-query-loop',\n\t\t\t\tclassName,\n\t\t\t].join( ' ' );\n\t\t}\n\t\t// Note that we also had to add a deprecation to the block in order\n\t\t// for the ID change to work.\n\t}\n\tif ( name === 'core/post-comments' ) {\n\t\tname = 'core/comments';\n\t\tnewAttributes.legacy = true;\n\t}\n\n\treturn [ name, newAttributes ];\n}\n"]}